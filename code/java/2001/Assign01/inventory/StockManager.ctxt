#BlueJ class context
comment0.target=StockManager
comment0.text=\n\ Manage\ the\ stock\ in\ a\ business.\n\ The\ stock\ is\ described\ by\ zero\ or\ more\ Products.\n\ \n\ @author\ Dewan\ Mukto\ (dmimukto)\ \n\ @version\ 2022\ Sept\ 27\n
comment1.params=
comment1.target=StockManager()
comment1.text=\n\ Initialise\ the\ stock\ manager.\n
comment10.params=stockTarget
comment10.target=void\ orderStockProducts(int)
comment10.text=\n\ Add\ the\ products\ which\ has\ stock\n\ levels\ below\ the\ given\ amount\ to\ the\ onOrder\ list,\ but\n\ only\ if\ they\ are\ not\ already\ on\ the\ onOrder\ list.\n\ Change\ the\ quantity\ field\ in\ onOrder\ list\ to\ the\ difference\ between\ the\ current\n\ number\ on\ hand\ and\ the\ stockTarget\n
comment11.params=upperLimit
comment11.target=java.util.ArrayList\ lowStockProducts(int)
comment11.text=\n\ Return\ arraylist\ of\ all\ the\ products\ which\ has\ stock\n\ levels\ below\ the\ given\ amount\n
comment12.params=name
comment12.target=Product\ findProduct(java.lang.String)
comment12.text=\n\ Try\ to\ find\ a\ product\ in\ the\ stock\ with\ the\ given\ name.\n\n\ @return\ The\ identified\ product,\ or\ null\ if\ there\ is\ none\n\ with\ a\ matching\ name.\n
comment2.params=item
comment2.target=void\ addProduct(Product)
comment2.text=\n\ Add\ a\ product\ to\ the\ list.\n\ @param\ item\ The\ item\ to\ be\ added.\n
comment3.params=id\ amount
comment3.target=void\ delivery(int,\ int)
comment3.text=\n\ Receive\ a\ delivery\ of\ a\ particular\ product.\n\ Increase\ the\ quantity\ of\ the\ product\ by\ the\ given\ amount.\n\ @param\ id\ The\ ID\ of\ the\ product.\n\ @param\ amount\ The\ amount\ to\ increase\ the\ quantity\ by.\n
comment4.params=id
comment4.target=Product\ findProduct(int)
comment4.text=\n\ Try\ to\ find\ a\ product\ in\ the\ stock\ with\ the\ given\ id.\n\ @return\ The\ identified\ product,\ or\ null\ if\ there\ is\ none\n\ \ \ \ \ \ \ \ \ with\ a\ matching\ ID.\n
comment5.params=id
comment5.target=int\ numberInStock(int)
comment5.text=\n\ Locate\ a\ product\ with\ the\ given\ ID,\ and\ return\ how\n\ many\ of\ this\ item\ are\ in\ stock.\ If\ the\ ID\ does\ not\n\ match\ any\ product,\ return\ zero.\n\ @param\ id\ The\ ID\ of\ the\ product.\n\ @return\ The\ quantity\ of\ the\ given\ product\ in\ stock.\n
comment6.params=
comment6.target=void\ printProductDetails()
comment6.text=\n\ Print\ details\ of\ all\ the\ products.\n
comment7.params=
comment7.target=int\ productCount()
comment7.text=\n\ Return\ the\ number\ of\ different\ types\ of\ stock\ items\n\ in\ stock\ list.\ Added\ by\ E\ Brown.\n
comment8.params=name
comment8.target=Product\ findOrder(java.lang.String)
comment8.text=\n\ Try\ to\ find\ a\ product\ in\ the\ orders\ with\ the\ given\ name.\n\n\ @return\ The\ identified\ product,\ or\ null\ if\ there\ is\ none\n\ with\ a\ matching\ name.\n
comment9.params=data
comment9.target=void\ loadSampleData(java.lang.String[][])
comment9.text=\n\ Load\ the\ stock\ inventory\ with\ the\ Product\ information\ contained\ in\ the\ data\ provided\ as\ a\n\ parameter\ to\ the\ method.\n\ The\ data\ parameter\ is\ a\ 2d\ array\ of\ strings.\n\ Earch\ row\ index\ i\ of\ the\ 2d\ array\ data[i]\ contains\ three\ strings\:\n\ \ \ \ \ \ data[i][0]\ is\ a\ string\ containing\ the\ id\ of\ the\ ith\ product\n\ \ \ \ \ \ data[i][1]\ is\ a\ string\ containing\ the\ name/description\ of\ the\ ith\ product\n\ \ \ \ \ \ \ \ data[i][2]\ is\ a\ string\ containing\ the\ quantity\ of\ the\ ith\ product\n\ Note\:\ some\ of\ these\ values\ will\ need\ to\ be\ converted\ from\ String\ type\ to\ int\ type.\n
numComments=13
